package com.example.smilealarmtask;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import android.app.Application;
import android.util.Log;

public class GlobalVariable extends Application { 
    /**
     * 引发异常：在一些不规范的代码中经常看到Activity或者是Service当中定义许多静态成员属性。这样做可能会造成许多莫名其妙的 null
     * pointer异常。
     */ 
   
    /**
     * 异常分析：Java虚拟机的垃圾回收机制会主动回收没有被引用的对象或属性。在内存不足时，虚拟机会主动回收处于后台的Activity或
     * Service所占用的内存。当应用再次去调用静态属性或对象的时候，就会造成null pointer异常
     */ 
   
    /**
     * 解决异常：Application在整个应用中，只要进程存在，Application的静态成员变量就不会被回收，不会造成null pointer异常
     */ 
    private ArrayList<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
    int ClockID;
    @Override 
    public void onCreate() { 
        // TODO Auto-generated method stub 
        super.onCreate(); 
		//Log.w("TAG", "list初始化"); // 调试信息
		//Map<String, Object> item = new HashMap<String, Object>();
		//item.put("image", R.drawable.clock);
		//item.put("title", "adassakjf");
		//item.put("info", getString(R.string.clock_setted));
		//this.list.add(item);
		//setList(list);
    } 
    //调用方式
   //((HelloApplication)getApplication()).setGlobalVariable(10);
    //int valiable=((HelloApplication)getApplication()).getGlobalVariable();
    
    public ArrayList<Map<String, Object>> getList() {  
        return list; 
    } 
    public void setList(ArrayList<Map<String, Object>> list) { 
    	if(list != null){
    		this.list = list; 
    	}
    	else{
    		Log.w("TAG", "Set List Failed!");
    	}
    } 
}